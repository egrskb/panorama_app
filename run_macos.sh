#!/bin/bash

# –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞ Panorama App –¥–ª—è macOS
# –û–±—ä–µ–¥–∏–Ω—è–µ—Ç: —É—Å—Ç–∞–Ω–æ–≤–∫—É —à—Ä–∏—Ñ—Ç–æ–≤, —Å–±–æ—Ä–∫—É –±–∏–±–ª–∏–æ—Ç–µ–∫–∏, –∑–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è

set -e  # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ

echo "=== Panorama App –¥–ª—è macOS ==="
echo

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç—å –∫ conda
CONDA_PATH="$HOME/radioconda"
if [ ! -d "$CONDA_PATH" ]; then
    echo "‚ùå Conda –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ $CONDA_PATH"
    echo "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ conda –∏–ª–∏ —É–∫–∞–∂–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø—É—Ç—å"
    exit 1
fi

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Homebrew –ø–∞–∫–µ—Ç–æ–≤
install_homebrew_deps() {
    echo "üì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ Homebrew –ø–∞–∫–µ—Ç–æ–≤..."
    
    # –°–ø–∏—Å–æ–∫ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–∞–∫–µ—Ç–æ–≤
    PACKAGES=("soapysdr" "soapyhackrf" "hackrf" "swig" "cmake" "pkg-config" "libusb" "fftw")
    
    for package in "${PACKAGES[@]}"; do
        if ! brew list | grep -q "^${package}$"; then
            echo "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º $package..."
            brew install "$package"
        else
            echo "‚úì $package —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        fi
    done
    echo
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ emoji —à—Ä–∏—Ñ—Ç–æ–≤
install_emoji_fonts() {
    echo "üé® –£—Å—Ç–∞–Ω–æ–≤–∫–∞ emoji —à—Ä–∏—Ñ—Ç–æ–≤..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Homebrew
    if ! command -v brew >/dev/null 2>&1; then
        echo "‚ùå Homebrew –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ–≥–æ —Å https://brew.sh"
        return 1
    fi
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —à—Ä–∏—Ñ—Ç—ã —á–µ—Ä–µ–∑ Homebrew
    echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ emoji —à—Ä–∏—Ñ—Ç–æ–≤ —á–µ—Ä–µ–∑ Homebrew..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö emoji —à—Ä–∏—Ñ—Ç–æ–≤
    if [ -f "/System/Library/Fonts/Apple Color Emoji.ttc" ]; then
        echo "‚úì Apple Color Emoji –Ω–∞–π–¥–µ–Ω"
    fi
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —à—Ä–∏—Ñ—Ç—ã —Å emoji –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π (–Ω–æ–≤—ã–π —Å–ø–æ—Å–æ–±)
    brew install --cask font-noto-emoji 2>/dev/null || {
        echo "‚ö†Ô∏è  Font Noto Emoji —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    }
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —à—Ä–∏—Ñ—Ç—ã –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    brew install --cask font-joypixels 2>/dev/null || {
        echo "‚ö†Ô∏è  Font JoyPixels —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    }
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –¥—Ä—É–≥–∏—Ö emoji —à—Ä–∏—Ñ—Ç–æ–≤
    if [ -f "/System/Library/Fonts/Supplemental/Apple Color Emoji.ttc" ]; then
        echo "‚úì Supplemental Apple Color Emoji –Ω–∞–π–¥–µ–Ω"
    fi
    
    echo "‚úÖ Emoji —à—Ä–∏—Ñ—Ç—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –¥–ª—è macOS"
    echo "üí° macOS –∏–º–µ–µ—Ç –≤—Å—Ç—Ä–æ–µ–Ω–Ω—É—é –ø–æ–¥–¥–µ—Ä–∂–∫—É emoji —à—Ä–∏—Ñ—Ç–æ–≤"
    echo
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–±–æ—Ä–∫–∏ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ hackrf_master
build_hackrf_master() {
    echo "üîß –°–±–æ—Ä–∫–∞ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ hackrf_master..."
    
    local original_dir=$(pwd)
    cd panorama/drivers/hackrf/hackrf_master
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É
    ARCH=$(uname -m)
    echo "üèóÔ∏è  –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: $ARCH"
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º macOS Makefile —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π ARM
    if [ -f "Makefile.macos" ]; then
        make -f Makefile.macos clean
        make -f Makefile.macos all
        make -f Makefile.macos install
        echo "‚úì –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ hackrf_master —Å–æ–±—Ä–∞–Ω–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞"
    else
        echo "‚ùå Makefile.macos –Ω–µ –Ω–∞–π–¥–µ–Ω"
        cd "$original_dir"
        exit 1
    fi
    
    cd "$original_dir"
    echo
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–±–æ—Ä–∫–∏ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ hackrf_slave
build_hackrf_slave() {
    echo "üîß –°–±–æ—Ä–∫–∞ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ hackrf_slave..."
    
    local original_dir=$(pwd)
    cd panorama/drivers/hackrf/hackrf_slaves
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É
    ARCH=$(uname -m)
    echo "üèóÔ∏è  –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: $ARCH"
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º macOS Makefile —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π ARM
    if [ -f "Makefile.macos" ]; then
        make -f Makefile.macos clean
        make -f Makefile.macos all
        echo "‚úì –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ hackrf_slave —Å–æ–±—Ä–∞–Ω–∞"
    elif [ -f "Makefile" ]; then
        make clean
        make all
        echo "‚úì –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ hackrf_slave —Å–æ–±—Ä–∞–Ω–∞"
    else
        echo "‚ùå Makefile –¥–ª—è hackrf_slave –Ω–µ –Ω–∞–π–¥–µ–Ω"
        cd "$original_dir"
        exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    if [ -f "libhackrf_slave.dylib" ] || [ -f "libhackrf_slave.so" ]; then
        LIBFILE=$(ls libhackrf_slave.* | head -1)
        echo "‚úì $LIBFILE —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ"
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
        echo "Library dependencies:"
        otool -L "$LIBFILE" || ldd "$LIBFILE" 2>/dev/null || true
        # –õ–æ–∫–∞–ª—å–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –æ—Å—Ç–∞–µ—Ç—Å—è –≤ –∫–∞—Ç–∞–ª–æ–≥–µ hackrf_slaves
        # –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∂–∞–µ—Ç –µ—ë –Ω–∞–ø—Ä—è–º—É—é –∏–∑ panorama/drivers/hackrf/hackrf_slaves
    else
        echo "‚ùå libhackrf_slave –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –ø–æ—Å–ª–µ —Å–±–æ—Ä–∫–∏"
        cd "$original_dir"
        exit 1
    fi
    
    cd "$original_dir"
    echo
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ conda –æ–∫—Ä—É–∂–µ–Ω–∏—è
check_conda_env() {
    echo "üêç –ü—Ä–æ–≤–µ—Ä–∫–∞ conda –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
    
    # –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º conda –æ–∫—Ä—É–∂–µ–Ω–∏–µ panorama_env (–ø–æ–¥–¥–µ—Ä–∂–∫–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç–∞–Ω–æ–≤–æ–∫)
    if command -v conda >/dev/null 2>&1; then
        # –ï—Å–ª–∏ conda –≤ PATH, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é –∞–∫—Ç–∏–≤–∞—Ü–∏—é
        # –ó–∞–≥—Ä—É–∂–∞–µ–º conda.sh, –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω, —á—Ç–æ–±—ã –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é 'conda'
        [ -f "$CONDA_PATH/etc/profile.d/conda.sh" ] && . "$CONDA_PATH/etc/profile.d/conda.sh"
        conda activate panorama_env || {
            echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –æ–∫—Ä—É–∂–µ–Ω–∏–µ panorama_env —á–µ—Ä–µ–∑ conda"
            exit 1
        }
    else
        # –§–æ–ª–±—ç–∫: source activate –∏–∑ bin
        if [ -f "$CONDA_PATH/bin/activate" ]; then
            # shellcheck disable=SC1090
            . "$CONDA_PATH/bin/activate" panorama_env || {
                echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –æ–∫—Ä—É–∂–µ–Ω–∏–µ panorama_env —á–µ—Ä–µ–∑ $CONDA_PATH/bin/activate"
                exit 1
            }
        else
            echo "‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω conda –∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç $CONDA_PATH/bin/activate"
            exit 1
        fi
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Python
    if ! python --version > /dev/null 2>&1; then
        echo "‚ùå Python –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ conda –æ–∫—Ä—É–∂–µ–Ω–∏–∏"
        exit 1
    fi
    
    # SoapySDR –±–æ–ª—å—à–µ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è
    
    echo "‚úì Conda –æ–∫—Ä—É–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ"
    echo
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
run_panorama() {
    echo "üöÄ –ó–∞–ø—É—Å–∫ Panorama App..."
    
    # –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º conda –æ–∫—Ä—É–∂–µ–Ω–∏–µ
    if command -v conda >/dev/null 2>&1; then
        [ -f "$CONDA_PATH/etc/profile.d/conda.sh" ] && . "$CONDA_PATH/etc/profile.d/conda.sh"
        conda activate panorama_env || {
            echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –æ–∫—Ä—É–∂–µ–Ω–∏–µ panorama_env —á–µ—Ä–µ–∑ conda"
            exit 1
        }
    else
        if [ -f "$CONDA_PATH/bin/activate" ]; then
            # shellcheck disable=SC1090
            . "$CONDA_PATH/bin/activate" panorama_env || {
                echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –æ–∫—Ä—É–∂–µ–Ω–∏–µ panorama_env —á–µ—Ä–µ–∑ $CONDA_PATH/bin/activate"
                exit 1
            }
        else
            echo "‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω conda –∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç $CONDA_PATH/bin/activate"
            exit 1
        fi
    fi
    
    # –û—á–∏—â–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    unset DYLD_LIBRARY_PATH
    unset SOAPY_SDR_PLUGIN_PATH
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    python run_rssi_panorama.py
}

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
main() {
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã
    if [ "$1" = "--help" ] || [ "$1" = "-h" ]; then
        echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [–æ–ø—Ü–∏–∏]"
        echo
        echo "–û–ø—Ü–∏–∏:"
        echo "  --help, -h     –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
        echo "  --install      –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –∏ —Å–æ–±—Ä–∞—Ç—å –±–∏–±–ª–∏–æ—Ç–µ–∫—É"
        echo "  --fonts        –¢–æ–ª—å–∫–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å emoji —à—Ä–∏—Ñ—Ç—ã"
        echo "  --build        –¢–æ–ª—å–∫–æ —Å–æ–±—Ä–∞—Ç—å –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ hackrf_master –∏ hackrf_slave"
        echo "  --run          –¢–æ–ª—å–∫–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"
        echo "  (–±–µ–∑ –æ–ø—Ü–∏–π)    –ü–æ–ª–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –∑–∞–ø—É—Å–∫"
        echo
        exit 0
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—É—é —Å–∏—Å—Ç–µ–º—É
    if [[ "$OSTYPE" != "darwin"* ]]; then
        echo "‚ùå –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω —Ç–æ–ª—å–∫–æ –¥–ª—è macOS"
        echo "–î–ª—è Linux –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: ./run_linux.sh"
        exit 1
    fi
    
    case "$1" in
        "--install")
            install_homebrew_deps
            install_emoji_fonts
            build_hackrf_master
            build_hackrf_slave
            check_conda_env
            echo "‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
            ;;
        "--fonts")
            install_emoji_fonts
            ;;
        "--build")
            build_hackrf_master
            build_hackrf_slave
            ;;
        "--run")
            check_conda_env
            run_panorama
            ;;
        "")
            # –ü–æ–ª–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –∑–∞–ø—É—Å–∫
            install_homebrew_deps
            install_emoji_fonts
            build_hackrf_master
            build_hackrf_slave
            check_conda_env
            run_panorama
            ;;
        *)
            echo "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ–ø—Ü–∏—è: $1"
            echo "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ --help –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏"
            exit 1
            ;;
    esac
}

# –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
main "$@"
