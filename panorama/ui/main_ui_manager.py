"""
–ú–µ–Ω–µ–¥–∂–µ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –¥–ª—è –ü–ê–ù–û–†–ê–ú–ê RSSI.
"""

import logging
from typing import Optional
from PyQt5 import QtWidgets, QtCore, QtGui
from PyQt5.QtCore import QObject, pyqtSignal
from PyQt5.QtWidgets import (QMainWindow, QWidget, QVBoxLayout, QHBoxLayout,
                            QTabWidget, QGroupBox, QLabel, QPushButton, 
                            QSpinBox, QDoubleSpinBox, QTextEdit, QTableWidget, 
                            QTableWidgetItem, QComboBox, QCheckBox, QSplitter, 
                            QFrame, QMessageBox, QFileDialog, QFormLayout)

from panorama.features.map import OpenLayersMapWidget
from panorama.features.spectrum import SpectrumView
from panorama.features.watchlist.view import ImprovedSlavesView
from panorama.features.spectrum.master_adapter import MasterSourceAdapter


class MainUIManager(QObject):
    """–ú–µ–Ω–µ–¥–∂–µ—Ä –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≥–ª–∞–≤–Ω—ã–º UI."""
    
    # –°–∏–≥–Ω–∞–ª—ã –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –≥–ª–∞–≤–Ω–æ–º—É –æ–∫–Ω—É
    load_calibration_requested = pyqtSignal()
    save_calibration_requested = pyqtSignal()
    calibration_settings_requested = pyqtSignal()
    detector_settings_requested = pyqtSignal()
    refresh_slaves_requested = pyqtSignal()
    export_slaves_requested = pyqtSignal()
    clear_slaves_requested = pyqtSignal()
    about_requested = pyqtSignal()
    device_manager_requested = pyqtSignal()
    
    def __init__(self, main_window: QMainWindow, orchestrator=None, logger: Optional[logging.Logger] = None):
        super().__init__()
        
        self.main_window = main_window
        self.orchestrator = orchestrator
        self.log = logger or logging.getLogger(__name__)
        
        # –°—Å—ã–ª–∫–∏ –Ω–∞ –æ—Å–Ω–æ–≤–Ω—ã–µ –≤–∏–¥–∂–µ—Ç—ã
        self.map_view: Optional[OpenLayersMapWidget] = None
        self.spectrum_view: Optional[SpectrumView] = None
        self.slaves_view: Optional[ImprovedSlavesView] = None
    
    def setup_main_ui(self):
        """–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –≥–ª–∞–≤–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å."""
        self._setup_window_properties()
        self._setup_theme()
        
        # –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –≤–∏–¥–∂–µ—Ç
        central_widget = QWidget()
        self.main_window.setCentralWidget(central_widget)
        
        # –û—Å–Ω–æ–≤–Ω–æ–π layout
        main_layout = QVBoxLayout(central_widget)
        
        # –°–æ–∑–¥–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –ø–∞–Ω–µ–ª—å
        main_panel = self._create_main_panel()
        main_layout.addWidget(main_panel)
        
        # –°–æ–∑–¥–∞–µ–º –º–µ–Ω—é –∏ –ø–∞–Ω–µ–ª—å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
        self._create_menu()
        self._create_toolbar()
        
        self.log.info("Main UI setup completed")
    
    def _setup_window_properties(self):
        """–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç —Å–≤–æ–π—Å—Ç–≤–∞ –æ–∫–Ω–∞."""
        self.main_window.setWindowTitle("–ü–ê–ù–û–†–ê–ú–ê RSSI - –°–∏—Å—Ç–µ–º–∞ —Ç—Ä–∏–ª–∞—Ç–µ—Ä–∞—Ü–∏–∏ –ø–æ RSSI")
        self.main_window.setGeometry(100, 100, 1400, 900)
    
    def _setup_theme(self):
        """–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç —Ç–µ–º—É –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è."""
        # –°–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è —Ç—ë–º–Ω–∞—è —Ç–µ–º–∞: qdarkstyle (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω), –∏–Ω–∞—á–µ fallback –Ω–∞ –ø–∞–ª–∏—Ç—Ä—É
        try:
            import qdarkstyle  # type: ignore
            self.main_window.setStyleSheet(qdarkstyle.load_stylesheet_pyqt5())
        except Exception:
            self._setup_dark_palette()
    
    def _setup_dark_palette(self):
        """–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç —Ç—ë–º–Ω—É—é –ø–∞–ª–∏—Ç—Ä—É –∫–∞–∫ fallback."""
        dark = QtGui.QPalette()
        dark.setColor(QtGui.QPalette.Window, QtGui.QColor(30, 30, 30))
        dark.setColor(QtGui.QPalette.WindowText, QtCore.Qt.white)
        dark.setColor(QtGui.QPalette.Base, QtGui.QColor(25, 25, 25))
        dark.setColor(QtGui.QPalette.AlternateBase, QtGui.QColor(35, 35, 35))
        dark.setColor(QtGui.QPalette.ToolTipBase, QtCore.Qt.white)
        dark.setColor(QtGui.QPalette.ToolTipText, QtCore.Qt.white)
        dark.setColor(QtGui.QPalette.Text, QtCore.Qt.white)
        dark.setColor(QtGui.QPalette.Button, QtGui.QColor(45, 45, 45))
        dark.setColor(QtGui.QPalette.ButtonText, QtCore.Qt.white)
        dark.setColor(QtGui.QPalette.BrightText, QtCore.Qt.red)
        dark.setColor(QtGui.QPalette.Link, QtGui.QColor(42, 130, 218))
        dark.setColor(QtGui.QPalette.Highlight, QtGui.QColor(42, 130, 218))
        dark.setColor(QtGui.QPalette.HighlightedText, QtCore.Qt.black)
        
        self.main_window.setPalette(dark)
        self.main_window.setStyleSheet("QToolTip { color: #ffffff; background-color: #2a82da; border: 1px solid white; }")
    
    def _create_main_panel(self) -> QWidget:
        """–°–æ–∑–¥–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω—É—é –ø–∞–Ω–µ–ª—å —Å –≤–∫–ª–∞–¥–∫–∞–º–∏."""
        main_widget = QWidget()
        layout = QVBoxLayout(main_widget)
        
        # –°–æ–∑–¥–∞–µ–º –≤–∫–ª–∞–¥–∫–∏
        tab_widget = QTabWidget()
        
        # –í–∫–ª–∞–¥–∫–∞ –∫–∞—Ä—Ç—ã
        self.map_view = OpenLayersMapWidget()
        tab_widget.addTab(self.map_view, "üó∫Ô∏è –ö–∞—Ä—Ç–∞")
        
        # –í–∫–ª–∞–¥–∫–∞ —Å–ø–µ–∫—Ç—Ä–∞
        self.spectrum_view = SpectrumView(orchestrator=self.orchestrator)
        # –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –∏—Å—Ç–æ—á–Ω–∏–∫ —á–µ—Ä–µ–∑ –∞–¥–∞–ø—Ç–µ—Ä, —á—Ç–æ–±—ã —Å—Ç–∞—Ä—Ç —Å—Ä–∞–∑—É –∑–∞–ø—É—Å–∫–∞–ª C-—Å–≤–∏–ø
        try:
            self.spectrum_view.set_source(MasterSourceAdapter(self.log))
        except Exception as e:
            self.log.error(f"Failed to set spectrum source: {e}")
        tab_widget.addTab(self.spectrum_view, "üìä –°–ø–µ–∫—Ç—Ä")
        
        # –í–∫–ª–∞–¥–∫–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–ª–µ–π–≤–∞–º–∏ (–æ–±—ä–µ–¥–∏–Ω—è–µ—Ç watchlist, —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏ –∫–æ–Ω—Ç—Ä–æ–ª—å)
        self.slaves_view = ImprovedSlavesView(orchestrator=self.orchestrator)
        tab_widget.addTab(self.slaves_view, "üéØ –°–ª–µ–π–≤—ã")
        
        layout.addWidget(tab_widget)
        
        return main_widget
    
    def _create_menu(self):
        """–°–æ–∑–¥–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é."""
        menubar = self.main_window.menuBar()
        
        # –ú–µ–Ω—é –§–∞–π–ª
        file_menu = menubar.addMenu('–§–∞–π–ª')
        file_menu.addAction('–ó–∞–≥—Ä—É–∑–∏—Ç—å –∫–∞–ª–∏–±—Ä–æ–≤–∫—É...').triggered.connect(self.load_calibration_requested.emit)
        file_menu.addAction('–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫–∞–ª–∏–±—Ä–æ–≤–∫—É...').triggered.connect(self.save_calibration_requested.emit)
        file_menu.addSeparator()
        file_menu.addAction('–í—ã—Ö–æ–¥').triggered.connect(self.main_window.close)
        
        # –ú–µ–Ω—é –ù–∞—Å—Ç—Ä–æ–π–∫–∏
        settings_menu = menubar.addMenu('–ù–∞—Å—Ç—Ä–æ–π–∫–∏')
        settings_menu.addAction('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞–ª–∏–±—Ä–æ–≤–∫–∏...').triggered.connect(self.calibration_settings_requested.emit)
        settings_menu.addAction('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–µ—Ç–µ–∫—Ç–æ—Ä–∞...').triggered.connect(self.detector_settings_requested.emit)
        
        # –ú–µ–Ω—é –°–ª–µ–π–≤—ã
        slaves_menu = menubar.addMenu('üéØ –°–ª–µ–π–≤—ã')
        slaves_menu.addAction('üîÑ –û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ').triggered.connect(self.refresh_slaves_requested.emit)
        slaves_menu.addAction('üíæ –≠–∫—Å–ø–æ—Ä—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è...').triggered.connect(self.export_slaves_requested.emit)
        slaves_menu.addSeparator()
        slaves_menu.addAction('üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å –¥–∞–Ω–Ω—ã–µ').triggered.connect(self.clear_slaves_requested.emit)
        
        # –ú–µ–Ω—é –°–ø—Ä–∞–≤–∫–∞
        help_menu = menubar.addMenu('–°–ø—Ä–∞–≤–∫–∞')
        help_menu.addAction('–û –ø—Ä–æ–≥—Ä–∞–º–º–µ...').triggered.connect(self.about_requested.emit)
    
    def _create_toolbar(self):
        """–°–æ–∑–¥–∞–µ—Ç –ø–∞–Ω–µ–ª—å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤."""
        toolbar = self.main_window.addToolBar('–û—Å–Ω–æ–≤–Ω–∞—è –ø–∞–Ω–µ–ª—å')
        toolbar.addAction('üß≠ –î–∏—Å–ø–µ—Ç—á–µ—Ä —É—Å—Ç—Ä–æ–π—Å—Ç–≤').triggered.connect(self.device_manager_requested.emit)
    
    
    def update_stations_from_config(self, config: dict):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç —Å—Ç–∞–Ω—Ü–∏–∏ –Ω–∞ –∫–∞—Ä—Ç–µ –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏."""
        try:
            if self.map_view:
                self.map_view.update_stations_from_config(config)
        except Exception as e:
            self.log.error(f"Error updating stations from config: {e}")
    
    def get_map_view(self) -> Optional[OpenLayersMapWidget]:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤–∏–¥–∂–µ—Ç –∫–∞—Ä—Ç—ã."""
        return self.map_view
    
    def get_spectrum_view(self) -> Optional[SpectrumView]:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤–∏–¥–∂–µ—Ç —Å–ø–µ–∫—Ç—Ä–∞."""
        return self.spectrum_view
    
    def get_slaves_view(self) -> Optional[ImprovedSlavesView]:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤–∏–¥–∂–µ—Ç —Å–ª–µ–π–≤–æ–≤."""
        return self.slaves_view