#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è WatchlistView
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ –∏ –±–∞–∑–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –≤–∏–¥–∂–µ—Ç–∞
"""

import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

def test_watchlist_import():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∏–º–ø–æ—Ä—Ç WatchlistView"""
    
    print("=== –¢–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–∞ WatchlistView ===")
    
    try:
        from panorama.features.watchlist import WatchlistView
        
        print(f"‚úÖ WatchlistView –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        print(f"   –¢–∏–ø: {type(WatchlistView)}")
        print(f"   –ú–æ–¥—É–ª—å: {WatchlistView.__module__}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ WatchlistView: {e}")
        import traceback
        traceback.print_exc()
        return False

def test_watchlist_class_definition():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–ª–∞—Å—Å–∞ WatchlistView"""
    
    print("\n=== –¢–µ—Å—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∫–ª–∞—Å—Å–∞ WatchlistView ===")
    
    try:
        from panorama.features.watchlist.view import WatchlistView
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ç—Ä–∏–±—É—Ç—ã –∫–ª–∞—Å—Å–∞
        expected_attrs = [
            'task_selected', 'task_cancelled', 'task_retried',
            'set_orchestrator', '_setup_ui', '_connect_orchestrator'
        ]
        
        all_passed = True
        for attr in expected_attrs:
            if hasattr(WatchlistView, attr):
                print(f"   ‚úÖ –ê—Ç—Ä–∏–±—É—Ç {attr}: –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
            else:
                print(f"   ‚ùå –ê—Ç—Ä–∏–±—É—Ç {attr}: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
                all_passed = False
        
        return all_passed
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–ª–∞—Å—Å–∞: {e}")
        import traceback
        traceback.print_exc()
        return False

def test_orchestrator_methods():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –º–µ—Ç–æ–¥—ã –æ—Ä–∫–µ—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
    
    print("\n=== –¢–µ—Å—Ç –º–µ—Ç–æ–¥–æ–≤ –æ—Ä–∫–µ—Å—Ç—Ä–∞—Ç–æ—Ä–∞ ===")
    
    try:
        from panorama.features.orchestrator.core import Orchestrator
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º–µ—Ç–æ–¥ get_active_tasks –¥–æ–±–∞–≤–ª–µ–Ω
        if hasattr(Orchestrator, 'get_active_tasks'):
            print("‚úÖ –ú–µ—Ç–æ–¥ get_active_tasks: –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
        else:
            print("‚ùå –ú–µ—Ç–æ–¥ get_active_tasks: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
            return False
            
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –æ—Ä–∫–µ—Å—Ç—Ä–∞—Ç–æ—Ä–∞: {e}")
        import traceback
        traceback.print_exc()
        return False

def test_main_integration():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å main_rssi.py"""
    
    print("\n=== –¢–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å main_rssi.py ===")
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∏–º–ø–æ—Ä—Ç –¥–æ–±–∞–≤–ª–µ–Ω
        with open('main_rssi.py', 'r') as f:
            content = f.read()
            
        checks = [
            ('from panorama.features.watchlist import WatchlistView', '–ò–º–ø–æ—Ä—Ç WatchlistView'),
            ('self.watchlist_view = WatchlistView(orchestrator=self.orchestrator)', '–°–æ–∑–¥–∞–Ω–∏–µ WatchlistView'),
            ('tab_widget.addTab(self.watchlist_view, "Watchlist")', '–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤–∫–ª–∞–¥–∫–∏ Watchlist'),
            ('self.watchlist_view.task_cancelled.connect(self._on_task_cancelled)', '–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Å–∏–≥–Ω–∞–ª–∞ task_cancelled'),
            ('self.watchlist_view.task_retried.connect(self._on_task_retried)', '–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Å–∏–≥–Ω–∞–ª–∞ task_retried'),
            ('def _on_task_cancelled(self, task_id: str):', '–ú–µ—Ç–æ–¥ _on_task_cancelled'),
            ('def _on_task_retried(self, task_id: str):', '–ú–µ—Ç–æ–¥ _on_task_retried')
        ]
        
        all_passed = True
        for check_str, description in checks:
            if check_str in content:
                print(f"   ‚úÖ {description}: –Ω–∞–π–¥–µ–Ω–æ")
            else:
                print(f"   ‚ùå {description}: –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
                all_passed = False
        
        return all_passed
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    print("–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ WatchlistView –∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏")
    print("=" * 60)
    
    success = True
    success &= test_watchlist_import()
    success &= test_watchlist_class_definition()
    success &= test_orchestrator_methods()
    success &= test_main_integration()
    
    print("\n" + "=" * 60)
    if success:
        print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        print("‚úÖ WatchlistView –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é")
        print("\n–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å:")
        print("  ‚Ä¢ –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞–¥–∞—á watchlist –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏")
        print("  ‚Ä¢ –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —Å—Ç–∞—Ç—É—Å—É –∏ —á–∞—Å—Ç–æ—Ç–µ")
        print("  ‚Ä¢ –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–¥–∞—á–∞—Ö")
        print("  ‚Ä¢ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∞–º–∏ (–æ—Ç–º–µ–Ω–∞, –ø–æ–≤—Ç–æ—Ä)")
        print("  ‚Ä¢ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥")
    else:
        print("‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ–π–¥–µ–Ω—ã")
        print("   –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –≤—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    
    print("\n–¢–µ–ø–µ—Ä—å –≤ –≥–ª–∞–≤–Ω–æ–º –æ–∫–Ω–µ –ø–æ—è–≤–∏—Ç—Å—è –≤–∫–ª–∞–¥–∫–∞ 'Watchlist' –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∑–∞–¥–∞—á")
