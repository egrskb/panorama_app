#!/usr/bin/env python3
"""
–£–ø—Ä–æ—â–µ–Ω–Ω—ã–π —Ç–µ—Å—Ç –¥–ª—è WatchlistView
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ç–æ–ª—å–∫–æ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é –±–µ–∑ –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª–µ–π
"""

import os

def test_watchlist_files():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–æ–≤ WatchlistView"""
    
    print("=== –¢–µ—Å—Ç —Ñ–∞–π–ª–æ–≤ WatchlistView ===")
    
    files_to_check = [
        'features/watchlist/__init__.py',
        'features/watchlist/view.py'
    ]
    
    all_passed = True
    for file_path in files_to_check:
        if os.path.exists(file_path):
            print(f"   ‚úÖ {file_path}: –Ω–∞–π–¥–µ–Ω")
        else:
            print(f"   ‚ùå {file_path}: –Ω–µ –Ω–∞–π–¥–µ–Ω")
            all_passed = False
    
    return all_passed

def test_orchestrator_integration():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å –æ—Ä–∫–µ—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º"""
    
    print("\n=== –¢–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –æ—Ä–∫–µ—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º ===")
    
    try:
        with open('features/orchestrator/core.py', 'r') as f:
            content = f.read()
            
        checks = [
            ('def get_active_tasks(self) -> List[MeasurementTask]:', '–ú–µ—Ç–æ–¥ get_active_tasks'),
            ('return list(self.tasks.values())', '–í–æ–∑–≤—Ä–∞—Ç —Å–ø–∏—Å–∫–∞ –∑–∞–¥–∞—á')
        ]
        
        all_passed = True
        for check_str, description in checks:
            if check_str in content:
                print(f"   ‚úÖ {description}: –Ω–∞–π–¥–µ–Ω–æ")
            else:
                print(f"   ‚ùå {description}: –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
                all_passed = False
        
        return all_passed
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –æ—Ä–∫–µ—Å—Ç—Ä–∞—Ç–æ—Ä–∞: {e}")
        return False

def test_main_integration():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å main_rssi.py"""
    
    print("\n=== –¢–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å main_rssi.py ===")
    
    try:
        with open('main_rssi.py', 'r') as f:
            content = f.read()
            
        checks = [
            ('from panorama.features.watchlist import WatchlistView', '–ò–º–ø–æ—Ä—Ç WatchlistView'),
            ('self.watchlist_view = WatchlistView(orchestrator=self.orchestrator)', '–°–æ–∑–¥–∞–Ω–∏–µ WatchlistView'),
            ('tab_widget.addTab(self.watchlist_view, "Watchlist")', '–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤–∫–ª–∞–¥–∫–∏ Watchlist'),
            ('self.watchlist_view.task_cancelled.connect(self._on_task_cancelled)', '–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Å–∏–≥–Ω–∞–ª–∞ task_cancelled'),
            ('self.watchlist_view.task_retried.connect(self._on_task_retried)', '–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Å–∏–≥–Ω–∞–ª–∞ task_retried'),
            ('def _on_task_cancelled(self, task_id: str):', '–ú–µ—Ç–æ–¥ _on_task_cancelled'),
            ('def _on_task_retried(self, task_id: str):', '–ú–µ—Ç–æ–¥ _on_task_retried')
        ]
        
        all_passed = True
        for check_str, description in checks:
            if check_str in content:
                print(f"   ‚úÖ {description}: –Ω–∞–π–¥–µ–Ω–æ")
            else:
                print(f"   ‚ùå {description}: –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
                all_passed = False
        
        return all_passed
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏: {e}")
        return False

def test_watchlist_view_content():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ WatchlistView"""
    
    print("\n=== –¢–µ—Å—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ WatchlistView ===")
    
    try:
        with open('features/watchlist/view.py', 'r') as f:
            content = f.read()
            
        checks = [
            ('class WatchlistView(QWidget):', '–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–ª–∞—Å—Å–∞ WatchlistView'),
            ('task_selected = pyqtSignal(object)', '–°–∏–≥–Ω–∞–ª task_selected'),
            ('task_cancelled = pyqtSignal(str)', '–°–∏–≥–Ω–∞–ª task_cancelled'),
            ('task_retried = pyqtSignal(str)', '–°–∏–≥–Ω–∞–ª task_retried'),
            ('def _setup_ui(self):', '–ú–µ—Ç–æ–¥ _setup_ui'),
            ('def _connect_orchestrator(self):', '–ú–µ—Ç–æ–¥ _connect_orchestrator'),
            ('def set_orchestrator(self, orchestrator: Orchestrator):', '–ú–µ—Ç–æ–¥ set_orchestrator')
        ]
        
        all_passed = True
        for check_str, description in checks:
            if check_str in content:
                print(f"   ‚úÖ {description}: –Ω–∞–π–¥–µ–Ω–æ")
            else:
                print(f"   ‚ùå {description}: –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
                all_passed = False
        
        return all_passed
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ: {e}")
        return False

if __name__ == "__main__":
    print("–£–ø—Ä–æ—â–µ–Ω–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ WatchlistView –∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏")
    print("=" * 60)
    
    success = True
    success &= test_watchlist_files()
    success &= test_orchestrator_integration()
    success &= test_main_integration()
    success &= test_watchlist_view_content()
    
    print("\n" + "=" * 60)
    if success:
        print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        print("‚úÖ WatchlistView –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é")
        print("\n–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å:")
        print("  ‚Ä¢ –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞–¥–∞—á watchlist –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏")
        print("  ‚Ä¢ –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —Å—Ç–∞—Ç—É—Å—É –∏ —á–∞—Å—Ç–æ—Ç–µ")
        print("  ‚Ä¢ –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–¥–∞—á–∞—Ö")
        print("  ‚Ä¢ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∞–º–∏ (–æ—Ç–º–µ–Ω–∞, –ø–æ–≤—Ç–æ—Ä)")
        print("  ‚Ä¢ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥")
        print("\n–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è:")
        print("  ‚Ä¢ –î–æ–±–∞–≤–ª–µ–Ω–∞ –≤–∫–ª–∞–¥–∫–∞ 'Watchlist' –≤ –≥–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ")
        print("  ‚Ä¢ –ü–æ–¥–∫–ª—é—á–µ–Ω–∞ –∫ –æ—Ä–∫–µ—Å—Ç—Ä–∞—Ç–æ—Ä—É")
        print("  ‚Ä¢ –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤ –æ—Ç–º–µ–Ω—ã –∏ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è –∑–∞–¥–∞—á")
    else:
        print("‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ–π–¥–µ–Ω—ã")
        print("   –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –≤—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    
    print("\n–¢–µ–ø–µ—Ä—å –≤ –≥–ª–∞–≤–Ω–æ–º –æ–∫–Ω–µ –ø–æ—è–≤–∏—Ç—Å—è –≤–∫–ª–∞–¥–∫–∞ 'Watchlist' –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∑–∞–¥–∞—á")
