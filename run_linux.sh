#!/bin/bash

# –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞ Panorama App –¥–ª—è Linux
# –û–±—ä–µ–¥–∏–Ω—è–µ—Ç: —É—Å—Ç–∞–Ω–æ–≤–∫—É —à—Ä–∏—Ñ—Ç–æ–≤, —Å–±–æ—Ä–∫—É –±–∏–±–ª–∏–æ—Ç–µ–∫–∏, –∑–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è

set -e  # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ

echo "=== Panorama App –¥–ª—è Linux ==="
echo

# –ü—É—Ç—å –∫ venv
VENV_DIR="$(pwd)/mvenv"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –¥–∏—Å—Ç—Ä–∏–±—É—Ç–∏–≤–∞ Linux
detect_distro() {
    if [ -f /etc/os-release ]; then
        . /etc/os-release
        echo "$ID"
    elif [ -f /etc/debian_version ]; then
        echo "debian"
    elif [ -f /etc/redhat-release ]; then
        echo "redhat"
    else
        echo "unknown"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
install_system_deps() {
    echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    
    DISTRO=$(detect_distro)
    
    case "$DISTRO" in
        "ubuntu"|"debian"|"linuxmint")
            echo "–û–±–Ω–∞—Ä—É–∂–µ–Ω –¥–∏—Å—Ç—Ä–∏–±—É—Ç–∏–≤: $DISTRO"
            sudo apt-get update
            sudo apt-get install -y libhackrf-dev libfftw3-dev build-essential pkg-config \
                libusb-1.0-0-dev cmake swig python3-dev python3-pip
            ;;
        "fedora"|"rhel"|"centos"|"rocky"|"alma")
            echo "–û–±–Ω–∞—Ä—É–∂–µ–Ω –¥–∏—Å—Ç—Ä–∏–±—É—Ç–∏–≤: $DISTRO"
            if command -v dnf >/dev/null 2>&1; then
                sudo dnf install -y hackrf-devel fftw3-devel gcc make pkgconfig \
                    libusb1-devel cmake swig python3-devel python3-pip
            else
                sudo yum install -y hackrf-devel fftw3-devel gcc make pkgconfig \
                    libusb1-devel cmake swig python3-devel python3-pip
            fi
            ;;
        "arch"|"manjaro")
            echo "–û–±–Ω–∞—Ä—É–∂–µ–Ω –¥–∏—Å—Ç—Ä–∏–±—É—Ç–∏–≤: $DISTRO"
            sudo pacman -S --noconfirm hackrf fftw gcc make pkg-config \
                libusb cmake swig python python-pip
            ;;
        *)
            echo "‚ö†Ô∏è  –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –¥–∏—Å—Ç—Ä–∏–±—É—Ç–∏–≤: $DISTRO"
            echo "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –≤—Ä—É—á–Ω—É—é: libhackrf-dev, libfftw3-dev, build-essential, pkg-config"
            ;;
    esac
    echo
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ emoji —à—Ä–∏—Ñ—Ç–æ–≤
install_emoji_fonts() {
    echo "üé® –£—Å—Ç–∞–Ω–æ–≤–∫–∞ emoji —à—Ä–∏—Ñ—Ç–æ–≤..."
    
    if [ -f "install_emoji_fonts_universal.sh" ]; then
        chmod +x install_emoji_fonts_universal.sh
        ./install_emoji_fonts_universal.sh
    else
        echo "‚ö†Ô∏è  –°–∫—Ä–∏–ø—Ç install_emoji_fonts_universal.sh –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
    echo
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–±–æ—Ä–∫–∏ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ hackrf_master
build_hackrf_master() {
    echo "üîß –°–±–æ—Ä–∫–∞ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ hackrf_master..."
    
    local original_dir=$(pwd)
    cd panorama/drivers/hackrf/hackrf_master
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º Linux Makefile
    if [ -f "Makefile.linux" ]; then
        make -f Makefile.linux clean
        make -f Makefile.linux all
        make -f Makefile.linux install
        echo "‚úì –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ hackrf_master —Å–æ–±—Ä–∞–Ω–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞"
    else
        echo "‚ùå Makefile.linux –Ω–µ –Ω–∞–π–¥–µ–Ω"
        cd "$original_dir"
        exit 1
    fi
    
    cd "$original_dir"
    echo
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–±–æ—Ä–∫–∏ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ hackrf_slave
build_hackrf_slave() {
    echo "üîß –°–±–æ—Ä–∫–∞ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ hackrf_slave..."
    
    local original_dir=$(pwd)
    cd panorama/drivers/hackrf/hackrf_slaves
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º Linux Makefile
    if [ -f "Makefile.linux" ]; then
        make -f Makefile.linux clean
        make -f Makefile.linux all
        echo "‚úì –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ hackrf_slave —Å–æ–±—Ä–∞–Ω–∞"
    elif [ -f "Makefile" ]; then
        make clean
        make all
        echo "‚úì –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ hackrf_slave —Å–æ–±—Ä–∞–Ω–∞"
    else
        echo "‚ùå Makefile –¥–ª—è hackrf_slave –Ω–µ –Ω–∞–π–¥–µ–Ω"
        cd "$original_dir"
        exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    if [ -f "libhackrf_slave.so" ]; then
        echo "‚úì libhackrf_slave.so —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ"
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
        echo "Library dependencies:"
        ldd libhackrf_slave.so
        # –õ–æ–∫–∞–ª—å–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –æ—Å—Ç–∞–µ—Ç—Å—è –≤ –∫–∞—Ç–∞–ª–æ–≥–µ hackrf_slaves
        # –ö–æ–¥ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∑–∞–≥—Ä—É–∂–∞–µ—Ç –µ—ë –Ω–∞–ø—Ä—è–º—É—é –∏–∑ panorama/drivers/hackrf/hackrf_slaves
    else
        echo "‚ùå libhackrf_slave.so –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –ø–æ—Å–ª–µ —Å–±–æ—Ä–∫–∏"
        cd "$original_dir"
        exit 1
    fi
    
    cd "$original_dir"
    echo
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ conda –æ–∫—Ä—É–∂–µ–Ω–∏—è
check_venv() {
    echo "üêç –ü—Ä–æ–≤–µ—Ä–∫–∞ python venv..."
    
    if [ ! -d "$VENV_DIR" ]; then
        echo "–°–æ–∑–¥–∞—é –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –≤ $VENV_DIR"
        python3 -m venv "$VENV_DIR"
    fi
    
    # –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º venv
    # shellcheck disable=SC1090
    source "$VENV_DIR/bin/activate"
    
    python -m pip install --upgrade pip wheel setuptools >/dev/null
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –∏–∑ requirements.txt
    if [ -f requirements.txt ]; then
        echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ python-–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π (requirements.txt)"
        pip install -r requirements.txt
    fi
    
    # SoapySDR –±–æ–ª—å—à–µ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è
    echo
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –∫ USB
setup_usb_permissions() {
    echo "üîê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –∫ USB..."
    
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∞–≤–∏–ª–æ –¥–ª—è udev
    if [ ! -f "/etc/udev/rules.d/99-hackrf.rules" ]; then
        echo 'SUBSYSTEM=="usb", ATTRS{idVendor}=="1d50", ATTRS{idProduct}=="6089", MODE="0666"' | sudo tee /etc/udev/rules.d/99-hackrf.rules > /dev/null
        sudo udevadm control --reload-rules
        sudo udevadm trigger
        echo "‚úì –ü—Ä–∞–≤–∏–ª–∞ udev —Å–æ–∑–¥–∞–Ω—ã"
    else
        echo "‚úì –ü—Ä–∞–≤–∏–ª–∞ udev —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç"
    fi
    echo
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
run_panorama() {
    echo "üöÄ –ó–∞–ø—É—Å–∫ Panorama App..."
    
    # –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º venv
    # shellcheck disable=SC1090
    source "$VENV_DIR/bin/activate"
    
    # –û—á–∏—â–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è, —á—Ç–æ–±—ã –Ω–µ –º–µ—à–∞–ª–∏ —Å–∏—Å—Ç–µ–º–Ω—ã–µ –ø–ª–∞–≥–∏–Ω—ã
    unset LD_LIBRARY_PATH || true
    unset SOAPY_SDR_PLUGIN_PATH || true
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç—å –∫ –ª–∞—É–Ω—á–µ—Ä—É
    if [ -f "run_rssi_panorama.py" ]; then
        python run_rssi_panorama.py
    elif [ -f "panorama/run_rssi_panorama.py" ]; then
        python panorama/run_rssi_panorama.py
    else
        echo "‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω —Ñ–∞–π–ª –∑–∞–ø—É—Å–∫–∞ run_rssi_panorama.py"
        exit 1
    fi
}

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
main() {
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã
    if [ "$1" = "--help" ] || [ "$1" = "-h" ]; then
        echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [–æ–ø—Ü–∏–∏]"
        echo
        echo "–û–ø—Ü–∏–∏:"
        echo "  --help, -h     –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
        echo "  --install      –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –∏ —Å–æ–±—Ä–∞—Ç—å –±–∏–±–ª–∏–æ—Ç–µ–∫—É"
        echo "  --fonts        –¢–æ–ª—å–∫–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å emoji —à—Ä–∏—Ñ—Ç—ã"
        echo "  --build        –¢–æ–ª—å–∫–æ —Å–æ–±—Ä–∞—Ç—å –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ hackrf_master –∏ hackrf_slave"
        echo "  --usb          –¢–æ–ª—å–∫–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ USB"
        echo "  --run          –¢–æ–ª—å–∫–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"
        echo "  (–±–µ–∑ –æ–ø—Ü–∏–π)    –ü–æ–ª–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –∑–∞–ø—É—Å–∫"
        echo
        exit 0
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—É—é —Å–∏—Å—Ç–µ–º—É
    if [[ "$OSTYPE" != "linux-gnu"* ]]; then
        echo "‚ùå –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω —Ç–æ–ª—å–∫–æ –¥–ª—è Linux"
        echo "–î–ª—è macOS –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: ./run_macos.sh"
        exit 1
    fi
    
    case "$1" in
        "--install")
            install_system_deps
            install_emoji_fonts
            build_hackrf_master
            build_hackrf_slave
            setup_usb_permissions
            check_venv
            echo "‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
            ;;
        "--fonts")
            install_emoji_fonts
            ;;
        "--build")
            build_hackrf_master
            build_hackrf_slave
            ;;
        "--usb")
            setup_usb_permissions
            ;;
        "--run")
            check_venv
            run_panorama
            ;;
        "")
            # –ü–æ–ª–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –∑–∞–ø—É—Å–∫
            install_system_deps
            install_emoji_fonts
            build_hackrf_master
            build_hackrf_slave
            setup_usb_permissions
            check_venv
            run_panorama
            ;;
        *)
            echo "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ–ø—Ü–∏—è: $1"
            echo "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ --help –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏"
            exit 1
            ;;
    esac
}

# –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
main "$@"
