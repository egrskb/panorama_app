#!/bin/bash
# –°–∫—Ä–∏–ø—Ç —Å–±–æ—Ä–∫–∏ HackRF QSA C –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –¥–ª—è Python CFFI

set -euo pipefail

echo "üîß –°–±–æ—Ä–∫–∞ HackRF QSA C –±–∏–±–ª–∏–æ—Ç–µ–∫–∏"
echo "=================================="

SRC_DIR="panorama/drivers/hackrf_master"
LIB_NAME="libhackrf_master.so"
SRC_FILES=("hackrf_master.c" "hackrf_master.h")

# === –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π ===
check_dependencies() {
    echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    command -v gcc >/dev/null || { echo "‚ùå gcc –Ω–µ –Ω–∞–π–¥–µ–Ω"; exit 1; }
    echo "‚úì gcc –Ω–∞–π–¥–µ–Ω: $(gcc --version | head -n1)"

    command -v make >/dev/null || { echo "‚ùå make –Ω–µ –Ω–∞–π–¥–µ–Ω"; exit 1; }
    echo "‚úì make –Ω–∞–π–¥–µ–Ω: $(make --version | head -n1)"

    command -v pkg-config >/dev/null || { echo "‚ùå pkg-config –Ω–µ –Ω–∞–π–¥–µ–Ω"; exit 1; }
    echo "‚úì pkg-config –Ω–∞–π–¥–µ–Ω: $(pkg-config --version)"

    pkg-config --exists libhackrf || { echo "‚ùå libhackrf-dev –Ω–µ –Ω–∞–π–¥–µ–Ω"; exit 1; }
    echo "‚úì libhackrf: $(pkg-config --modversion libhackrf)"

    pkg-config --exists fftw3f || { echo "‚ùå libfftw3-dev –Ω–µ –Ω–∞–π–¥–µ–Ω"; exit 1; }
    echo "‚úì fftw3f: $(pkg-config --modversion fftw3f)"

    python3 -c "import cffi" 2>/dev/null || { echo "‚ùå Python CFFI –Ω–µ –Ω–∞–π–¥–µ–Ω (pip install cffi)"; exit 1; }
    echo "‚úì Python CFFI –Ω–∞–π–¥–µ–Ω"
}

# === –°–±–æ—Ä–∫–∞ C –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ ===
build_c_library() {
    echo ""
    echo "üì¶ –°–±–æ—Ä–∫–∞ C –±–∏–±–ª–∏–æ—Ç–µ–∫–∏..."

    cd "$SRC_DIR"

    for f in "${SRC_FILES[@]}"; do
        [ -f "$f" ] || { echo "‚ùå –ù–µ—Ç —Ñ–∞–π–ª–∞ $f"; exit 1; }
    done
    echo "‚úì –ò—Å—Ö–æ–¥–Ω–∏–∫–∏ –Ω–∞–π–¥–µ–Ω—ã"

    echo "  –û—á–∏—Å—Ç–∫–∞..."
    rm -f hackrf_master.o "$LIB_NAME"

    echo "  –ö–æ–º–ø–∏–ª—è—Ü–∏—è —Å -fPIC..."
    gcc -O3 -Wall -Wextra -fPIC \
        -I. -I/usr/local/include -I/usr/local/include/libhackrf -I/usr/include/libusb-1.0 \
        -c hackrf_master.c -o hackrf_master.o

    echo "  –õ–∏–Ω–∫–æ–≤–∫–∞..."
    gcc -shared -o "$LIB_NAME" hackrf_master.o \
        -L/usr/local/lib -lhackrf -lfftw3f -lm -lpthread

    echo "‚úì –°–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞: $SRC_DIR/$LIB_NAME"
    ls -lh "$LIB_NAME"

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞ —Å–∏–º–≤–æ–ª–æ–≤
    echo "  –ü—Ä–æ–≤–µ—Ä–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞ —Å–∏–º–≤–æ–ª–æ–≤..."
    if nm -D "$LIB_NAME" | grep -q " hq_open"; then
        echo "‚úì –°–∏–º–≤–æ–ª hq_open –Ω–∞–π–¥–µ–Ω"
    else
        echo "‚ùå –°–∏–º–≤–æ–ª hq_open –Ω–µ –Ω–∞–π–¥–µ–Ω! –ü—Ä–æ–≤–µ—Ä—å hackrf_master.c"
        exit 1
    fi

    cd - >/dev/null
}

# === –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ ===
test_build() {
    echo ""
    echo "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ..."

    [ -f "$SRC_DIR/$LIB_NAME" ] || { echo "‚ùå $LIB_NAME –Ω–µ –Ω–∞–π–¥–µ–Ω"; exit 1; }

    if file "$SRC_DIR/$LIB_NAME" | grep -q "ELF"; then
        echo "‚úì ELF –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞"
    else
        echo "‚ùå –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∞"
        exit 1
    fi

    echo "  –¢–µ—Å—Ç Python..."
    if python3 -c "
import sys; sys.path.insert(0,'.')
from panorama.drivers.hrf_backend import HackRFQSABackend
print('‚úì Python –∏–º–ø–æ—Ä—Ç —É—Å–ø–µ—à–µ–Ω')
"; then
        echo "‚úì Python backend —Ä–∞–±–æ—Ç–∞–µ—Ç"
    else
        echo "‚ùå –û—à–∏–±–∫–∞ Python backend"
        exit 1
    fi
}

# === –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤ —Å–∏—Å—Ç–µ–º—É ===
install_library() {
    echo ""
    read -p "üì• –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–∏–±–ª–∏–æ—Ç–µ–∫—É –≤ —Å–∏—Å—Ç–µ–º—É (/usr/local/lib)? (y/N): " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        sudo cp -f "$SRC_DIR/$LIB_NAME" /usr/local/lib/
        sudo ldconfig
        echo "‚úì –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –≤ /usr/local/lib"
    else
        echo "–ü—Ä–æ–ø—É—Å–∫ —É—Å—Ç–∞–Ω–æ–≤–∫–∏"
    fi
}

# === –û—Å–Ω–æ–≤–Ω–æ–π –∑–∞–ø—É—Å–∫ ===
main() {
    check_dependencies
    build_c_library
    test_build
    install_library

    echo ""
    echo "üéâ –ì–æ—Ç–æ–≤–æ! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ:"
    echo "  from panorama.drivers.hrf_backend import HackRFQSABackend"
    echo ""
}

trap 'echo "‚ùå –û—à–∏–±–∫–∞ –≤ —Å—Ç—Ä–æ–∫–µ $LINENO"; exit 1' ERR
main "$@"
